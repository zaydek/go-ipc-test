{
  "version": 3,
  "sources": ["backend.ts"],
  "sourcesContent": ["import * as esbuild from \"esbuild\"\nimport * as fs from \"fs\"\nimport * as path from \"path\"\n\n////////////////////////////////////////////////////////////////////////////////\n\nconst readline = ((): (() => Promise<string>) => {\n\tasync function* createReadlineGenerator(): AsyncGenerator<string> {\n\t\tconst readlineImpl = require(\"readline\").createInterface({ input: process.stdin })\n\t\tfor await (const line of readlineImpl) {\n\t\t\tyield line\n\t\t}\n\t}\n\tconst generate = createReadlineGenerator()\n\treturn async () => {\n\t\treturn (await generate.next()).value\n\t}\n})()\n\n////////////////////////////////////////////////////////////////////////////////\n\ninterface Message {\n\tKind: string\n\tData: any // TODO: Should this be an object or unknown?\n}\n\ninterface BackendResponse {\n\tMetafile: {\n\t\tVendor: esbuild.Metafile | null\n\t\tClient: esbuild.Metafile | null\n\t}\n\tWarnings: esbuild.Message[]\n\tErrors: esbuild.Message[]\n}\n\n////////////////////////////////////////////////////////////////////////////////\n\n// Lazily wraps `throw new Error(...)` because throws aren't legal expressions.\nfunction InternalError<Type>(returnType: Type): Type {\n\tthrow new Error(\"Internal Error\")\n\treturn returnType\n}\n\nconst NODE_ENV = process.env[\"NODE_ENV\"] ?? InternalError(\"\")\nconst RETRO_CMD = process.env[\"RETRO_CMD\"] ?? InternalError(\"\")\nconst RETRO_WWW_DIR = process.env[\"RETRO_WWW_DIR\"] ?? InternalError(\"\")\nconst RETRO_SRC_DIR = process.env[\"RETRO_SRC_DIR\"] ?? InternalError(\"\")\nconst RETRO_OUT_DIR = process.env[\"RETRO_OUT_DIR\"] ?? InternalError(\"\")\n\n// Describes the bundled vendor (React) esbuild result\nlet vendorResult: esbuild.BuildResult | null = null\n\n// Describes the bundled client (Retro) esbuild result\nlet clientResult: esbuild.BuildResult | esbuild.BuildIncremental | null = null\n\nconst commonOptions: esbuild.BuildOptions = {\n\t// Always bundle\n\tbundle: true,\n\n\t// Propagate env vars\n\tdefine: {\n\t\t// React and React DOM\n\t\t\"process.env.NODE_ENV\": JSON.stringify(NODE_ENV),\n\n\t\t// Retro\n\t\t\"process.env.RETRO_CMD\": JSON.stringify(RETRO_CMD),\n\t\t\"process.env.RETRO_WWW_DIR\": JSON.stringify(RETRO_WWW_DIR),\n\t\t\"process.env.RETRO_SRC_DIR\": JSON.stringify(RETRO_SRC_DIR),\n\t\t\"process.env.RETRO_OUT_DIR\": JSON.stringify(RETRO_OUT_DIR),\n\t},\n\n\t// Hash filenames for production\n\tentryNames: NODE_ENV !== \"production\"\n\t\t? undefined\n\t\t: \"[dir]/[name]__[hash]\",\n\n\t// Load JavaScript as JavaScript React\n\tloader: { \".js\": \"jsx\" },\n\n\t// Don't log because warnings and errors are handled programmatically\n\tlogLevel: \"silent\",\n\n\t// Includes the generated hashed filenames\n\tmetafile: true,\n\n\t// Minify for production\n\tminify: NODE_ENV === \"production\",\n\n\t// Target directory\n\toutdir: RETRO_OUT_DIR,\n\n\t// Add `*.map` files\n\tsourcemap: true,\n}\n\n// Resolves `retro.config.js` on the filesystem.\nasync function resolveRetroConfig(): Promise<esbuild.BuildOptions> {\n\ttry {\n\t\tawait fs.promises.stat(\"retro.config.js\")\n\t} catch {\n\t\treturn {}\n\t}\n\tconst retroConfigFilename = path.join(process.cwd(), \"retro.config.js\")\n\treturn require(retroConfigFilename)\n}\n\n////////////////////////////////////////////////////////////////////////////////\n\nasync function build(): Promise<BackendResponse> {\n\t// Create an empty backend response\n\tconst buildResult: BackendResponse = {\n\t\tMetafile: {\n\t\t\tVendor: null,\n\t\t\tClient: null,\n\t\t},\n\t\tWarnings: [],\n\t\tErrors: [],\n\t}\n\n\t// Resolve `.retro.config.js`\n\tconst config = await resolveRetroConfig()\n\n\ttry {\n\t\t// Build the vendor bundle (e.g. React)\n\t\t//\n\t\t// NOTE: Vendor bundles don't support configuration\n\t\tvendorResult = await esbuild.build({\n\t\t\t...commonOptions,\n\n\t\t\t// Entry point for the bundle\n\t\t\tentryPoints: {\n\t\t\t\t\"vendor\": path.join(__dirname, \"scripts/vendor.js\"),\n\t\t\t},\n\t\t})\n\t\tbuildResult.Metafile.Vendor = vendorResult.metafile!\n\n\t\t// Build the client bundle (e.g. Retro)\n\t\tclientResult = await esbuild.build({\n\t\t\t...commonOptions, // Takes precedence\n\t\t\t...config,        // Can override common options\n\n\t\t\t// Global variables\n\t\t\tdefine: {\n\t\t\t\t...commonOptions.define, // Takes precedence\n\t\t\t\t...config.define,        // Can override common options\n\t\t\t},\n\n\t\t\t// Entry point for the bundle\n\t\t\tentryPoints: {\n\t\t\t\t\"client\": path.join(RETRO_SRC_DIR, \"index.js\"),\n\t\t\t},\n\n\t\t\t// Dedupe React APIs from `bundle.js`; React APIs are bundled in\n\t\t\t// `vendor.js`. See `inject` for more context.\n\t\t\texternal: [\n\t\t\t\t\"react\",\n\t\t\t\t\"react-dom\",\n\t\t\t\t\"react-dom/server\",\n\t\t\t],\n\n\t\t\t// Enable incremental compilation for development\n\t\t\tincremental: NODE_ENV === \"development\",\n\n\t\t\t// Expose React APIs as global variables (defined on `window`). See\n\t\t\t// `external` for more context.\n\t\t\tinject: [path.join(__dirname, \"scripts/require.js\")], // Add React APIs\n\n\t\t\tloader: {\n\t\t\t\t...commonOptions.loader, // Takes precedence\n\t\t\t\t...config.loader,        // Can override common options\n\t\t\t},\n\t\t})\n\t\tbuildResult.Metafile.Client = clientResult.metafile!\n\n\t\tif (clientResult.warnings.length > 0) {\n\t\t\tbuildResult.Warnings = clientResult.warnings\n\t\t}\n\t} catch (caught) {\n\t\t// NOTE: esbuild warnings and errors are silent (via `logLevel: \"silent\"`)\n\t\t// because warnings and errors are managed by Retro. Retro decorates esbuild\n\t\t// errors and propagates them to the terminal and browser.\n\t\tif (caught.warnings.length > 0) {\n\t\t\tbuildResult.Warnings = caught.warnings\n\t\t}\n\t\tif (caught.errors.length > 0) {\n\t\t\tbuildResult.Errors = caught.errors\n\t\t}\n\t}\n\n\treturn buildResult\n}\n\n////////////////////////////////////////////////////////////////////////////////\n\n// Rebuilds the build result by reusing `build` literally. Note that only the\n// client result is rebuilt, not the vendor result.\nasync function rebuild(): Promise<BackendResponse> {\n\tif (clientResult?.rebuild === undefined) {\n\t\treturn await build()\n\t}\n\n\tconst rebuildResult: BackendResponse = {\n\t\tMetafile: {\n\t\t\tVendor: null,\n\t\t\tClient: null,\n\t\t},\n\t\tWarnings: [],\n\t\tErrors: [],\n\t}\n\n\ttry {\n\t\tconst result2 = await clientResult.rebuild()\n\t\tif (result2.warnings.length > 0) {\n\t\t\trebuildResult.Warnings = result2.warnings\n\t\t}\n\t} catch (caught) {\n\t\t// NOTE: esbuild warnings and errors are silent (via `logLevel: \"silent\"`)\n\t\t// because warnings and errors are managed by Retro. Retro decorates esbuild\n\t\t// errors and propagates them to the terminal and browser.\n\t\tif (caught.warnings.length > 0) {\n\t\t\trebuildResult.Warnings = caught.warnings\n\t\t}\n\t\tif (caught.errors.length > 0) {\n\t\t\trebuildResult.Errors = caught.errors\n\t\t}\n\t}\n\n\treturn rebuildResult\n}\n\n////////////////////////////////////////////////////////////////////////////////\n\nasync function main(): Promise<void> {\n\t// Warm up esbuild\n\tesbuild.initialize({})\n\n\twhile (true) {\n\t\tconst action = await readline()\n\t\ttry {\n\t\t\tswitch (action) {\n\t\t\t\tcase \"build\":\n\t\t\t\t\tconst buildResult = await build()\n\t\t\t\t\tconsole.log(\n\t\t\t\t\t\tJSON.stringify({\n\t\t\t\t\t\t\tKind: \"build-done\",\n\t\t\t\t\t\t\tData: buildResult,\n\t\t\t\t\t\t} as Message),\n\t\t\t\t\t)\n\t\t\t\t\tbreak\n\t\t\t\tcase \"rebuild\":\n\t\t\t\t\tconst rebuildResult = await rebuild()\n\t\t\t\t\tconsole.log(\n\t\t\t\t\t\tJSON.stringify({\n\t\t\t\t\t\t\tKind: \"rebuild-done\",\n\t\t\t\t\t\t\tData: rebuildResult,\n\t\t\t\t\t\t} as Message),\n\t\t\t\t\t)\n\t\t\t\t\tbreak\n\t\t\t\tdefault:\n\t\t\t\t\tthrow new Error(\"Internal error\")\n\t\t\t}\n\t\t} catch (error) {\n\t\t\tconsole.error(error.stack)\n\t\t\tprocess.exit(1)\n\t\t}\n\t}\n}\n\nmain()\n"],
  "mappings": "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",
  "names": []
}
